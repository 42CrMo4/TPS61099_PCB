name: Release Design

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

  pull_request:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ERC:
    runs-on: ubuntu-latest
    container: setsoft/kicad_auto:dev_k6

    steps:
    - uses: actions/checkout@v2

    - name: Run ERC
      run: |
        [ -f *.kicad_sch ] && kiplot  -d Fabrication -s update_xml,run_drc -i
    # - name: Retrieve results
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: ERC_Output
    #     path: Fabrication

  DRC:
    runs-on: ubuntu-latest
    container: setsoft/kicad_auto:dev_k6
    needs: ERC

    steps:
    - uses: actions/checkout@v2

    - name: Run DRC
      run: |
        [ -f *.kicad_pcb ] && kiplot  -d Fabrication -s update_xml,run_erc -i
    # - name: Retrieve results
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: DRC_Output
    #     path: Fabrication
    
  FabSch:
    name: Fabrication files
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container: setsoft/kicad_auto:dev_k6
    needs: DRC

    steps:
    - name: Update system repositories, Install Required Libraries and Initialize git-lfs
      run: |
        apt update
        apt -y install git
    
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Assign variables from project.properties to Env variable
      run: |
        cat project.properties >> $GITHUB_ENV 
    
    - name: Update the Schematic with the git hash
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s!<<hash>>!Git-${COMMIT}!" *.kicad_sch
        sed -i "s!<<project_name>>!${{ env.project_name }}!" *.kicad_sch
        sed -i "s!<<date>>!$(date +'%Y-%m-%d')!" *.kicad_sch 
        sed -i "s!<<version>>!${{ github.ref_name }}!" *.kicad_sch 
        sed -i "s!<<ID>>!ID: ${{ env.ID_prefix }}${{ env.ID }}!" *.kicad_sch 

    - name: Update the PCBs with the git hash
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"
        sed -i "s!<<hash>>!Git-${COMMIT}!" *.kicad_pcb
        sed -i "s!<<project_name>>!${{ env.project_name }}!" *.kicad_pcb
        sed -i "s!<<date>>!$(date +'%Y-%m-%d')!" *.kicad_pcb 
        sed -i "s!<<version>>!${{ github.ref_name }}!" *.kicad_pcb 
        sed -i "s!<<ID>>!ID: ${{ env.ID_prefix }}${{ env.ID }}!" *.kicad_pcb 

    - name: Update the release note with the RepoName / Tag
      run: |
        sed -i "s!<<repo_name>>!${{ github.repository }}!" release_note.md
        sed -i "s!<<tag>>!${{ github.ref_name }}!" release_note.md

    - name: Run Schematic and BOM 
      run: |
        [ -f design.kicad_sch ] && kiplot -d Fabrication -s all  print_sch interactive_bom 

    - name: Run PCB stuff
      run: |
        [ -f design.kicad_pcb ] && kiplot  -d Fabrication -s all print_front print_back pcb_top_b pcb_bottom_b step

    - name: Run PCB stuff
      run: |
        [ -f design.kicad_pcb ] && kiplot  -d Gerber -s all gerbers gerber_drills

    - uses: vimtor/action-zip@v1
      with:
        files: Gerber/
        recursive: false
        dest: Gerber.zip

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "Fabrication/*, Fabrication/BoM/*ibom*, *.kicad_sch, Gerber.zip, *.kicad_pcb, Fabrication/3D/*.step, Fabrication/PCB/blue/*"
        bodyFile: "release_note.md"
        token: ${{ secrets.GITHUB_TOKEN }}
